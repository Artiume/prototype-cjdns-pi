#!/usr/bin/env bash

# Enable forwarding for ipv4 and ipv6
echo 1 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv6/conf/all/forwarding

function confset {
    section="$1"
    key="$2"
    value="$3"
    file="$4"

    # If file is missing create one
    if [[ ! -f "$file" ]]; then 
	    touch "$file"
    fi

    # If file is section create it
    if [[ -z "$(grep "\[$section\]" "$file")" ]]; then
        echo "\[$section\]" >> "$file"
    fi

    # If file is missnig key add it
    confget -f "$file" -s "$section" -c "$key"
    res=$?
    if [[ "$res" == "1" ]]; then
        sed -i "s/\[$section]/\[$section]\n$key=$value/" "$file"
    else
    # Otherwise change it
        sed -i "/^\[$section]/,/^\[/{s/^$key=.*/$key=$value/;}" "$file"
    fi
}

# Give yggdrasil enough time to create an ygg0 interface before we start adding routes
sleep 3
IPv6NAT=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "iptunnel" IPv6nat)
if [[ -z "$IPv6NAT" ]]; then
    IPv6NAT=true
    confset "iptunnel" "IPv6nat" "$IPv6NAT" /etc/yggdrasil.iptunnel.conf
fi

if [ -e /etc/yggdrasil.iptunnel.server ]; then


    SUBNET4=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "iptunnel" SUBNET4)
    if [[ -z "${SUBNET4}" ]]; then
        SUBNET4="10.10.0."
    fi
    SUBNET6=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "iptunnel" SUBNET4)
    if [[ -z "${SUBNET4}" ]]; then
        SUBNET6="fd00::"
    fi

    while read -r PUBLIC_KEY IP_ADDR IP6_ADDR IP6_SUBNET; do
        if [[ "${PUBLIC_KEY}" =~ ^[0-z]{64} ]]; then
            sudo yggdrasilctl addRoute subnet="${IP_ADDR}/32" box_pub_key="${PUBLIC_KEY}"
            if [[ ! -z "${IP6_ADDR}" ]]; then
                sudo yggdrasilctl addRoute subnet="${IP6_ADDR}/128" box_pub_key="${PUBLIC_KEY}"
                isIPv6=true
            fi
        fi
    done < /etc/yggdrasil.iptunnel.server

    sudo yggdrasilctl addSourceSubnet subnet="0.0.0.0/0"
    sudo ip route add "${SUBNET4}0/24" dev ygg0 || true

    if [[ "${isIPv6}" == true ]]; then
        sudo yggdrasilctl addSourceSubnet subnet="::/0"
        # Add route for cjdns ygg0 interface
        sudo ip -6 route add "${SUBNET6}0/64" dev ygg0 || true
    fi

    # If no NAT (masquarading) being done, start doing it
    if [ -z "$(sudo iptables -L POSTROUTING -v -n -t nat  | grep MASQUERADE)" ]; then
        sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    fi
    # If no NAT (masquarading) being done, start doing it
    if [ -z "$(sudo ip6tables -L POSTROUTING -v -n -t nat  | grep MASQUERADE)" ]; then
        if [[ ! "${IPv6NAT}" == false ]]; then
            sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
        fi
    fi
# Configure as yggdrasil iptunnel client if client file is present (this is simply a newline-separated list
# of cjdns public keys in /etc/yggdrasil.iptunnel.client, each key indicating an iptunnel exit server)
elif [ -e /etc/yggdrasil.iptunnel.client ]; then
    # Add each server to yggdrasil iptunnel connect-to's
    while read -r PUBLIC_KEY IP_ADDR IP6_ADDR IP6_SUBNET; do
        if [[ "${PUBLIC_KEY}" =~ ^[0-z]{64} ]]; then
            if [[ ! -z "${IP6_ADDR}" ]]; then
                sudo ip addr add dev ygg0 ${IP6_ADDR}/128
                sudo yggdrasilctl addRoute subnet="::0/0" box_pub_key="${PUBLIC_KEY}"
                sudo yggdrasilctl addSourceSubnet subnet="${IP6_ADDR}/128"
            fi
            sudo ip addr add dev ygg0 ${ASSIGNED_IP}/32
            sudo yggdrasilctl addRoute subnet="0.0.0.0/0" box_pub_key="${PUBLIC_KEY}"
            sudo yggdrasilctl addSourceSubnet subnet="${IP_ADDR}/32"
        fi
    done < /etc/yggdrasil.iptunnel.client

    # Remove NAT from eth0 if it exists
    sudo iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE || true
    sudo ip6tables -t nat -D POSTROUTING -o eth0 -j MASQUERADE || true

    # Route NAT traffic through to yggdrasil ygg0 interface to use iptunnel exit server
    sudo iptables -t nat -A POSTROUTING -o ygg0 -j MASQUERADE
    if [[ ! "${IPv6NAT}" == false ]]; then
        sudo ip6tables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    fi

    # Special hack to change default route without removing original one
    sudo route add  -net 0.0.0.0/1 ygg0
    sudo route add  -net 128.0.0.0/1 ygg0
    sudo ip -6 route add ::/0 dev ygg0
fi
