#!/bin/bash

set -e

ERLANG_VERSION=20.1.7
ELIXIR_VERSION=1.8.1
PEERDNS_COMMIT=2da3979879f89edf7f35d4091ed185c139766ffe

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd /tmp
wget "https://packages.erlang-solutions.com/erlang/esl-erlang/FLAVOUR_1_general/esl-erlang_$ERLANG_VERSION-1~raspbian~stretch_armhf.deb"
sudo dpkg -i "esl-erlang_$ERLANG_VERSION-1~raspbian~stretch_armhf.deb" || true
sudo apt install -f -y  # Fix required deps

sudo mkdir /opt/elixir || true
sudo chmod -R 755 /opt/elixir  # Everyone can read and execute - only root can write
sudo wget -P /opt/elixir "https://github.com/elixir-lang/elixir/releases/download/v$ELIXIR_VERSION/Precompiled.zip"
sudo unzip /opt/elixir/Precompiled.zip -d /opt/elixir
sudo rm /opt/elixir/Precompiled.zip
echo 'export PATH="/opt/elixir/bin:$PATH"' | sudo tee -a /etc/profile  # Add to elixir binaries to PATH
export PATH="/opt/elixir/bin:$PATH"

# Debian keys needed for stretch-backports to be enabled, but Raspbian won't let you download them through apt
wget -P /tmp http://ftp.ca.debian.org/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2017.5_all.deb
sudo dpkg -i /tmp/debian-archive-keyring_2017.5_all.deb
echo "deb http://ftp.ca.debian.org/debian stretch-backports main" | sudo tee -a /etc/apt/sources.list
sudo apt update -y
sudo apt install -y -t stretch-backports libsodium23 libsodium-dev

cd /opt
sudo git clone https://github.com/p2pstuff/PeerDNS.git
sudo chown -R "$(whoami)" PeerDNS
cd PeerDNS
# Stay with a specific "version" that is known to work
git checkout $PEERDNS_COMMIT
mix deps.get
# Setup serving the webUI locally
cd ui
npm install
npm run build
cd ..
# Copy over config file
# Modify first
cp "$BASE_DIR/config.exs" /tmp
if [ "$(which cjdroute)" ] && [ "$(ip addr | grep tun0)" ]; then
    sed -i 's/__CJDNS_ENABLE__/true/' /tmp/config.exs
else
    sed -i 's/__CJDNS_ENABLE__/false/' /tmp/config.exs
fi
if [ "$(which yggdrasil)" ]  && [ "$(ip addr | grep ygg0)" ]; then
    sed -i 's/__YGG_ENABLE__/true/' /tmp/config.exs
else
    sed -i 's/__YGG_ENABLE__/false/' /tmp/config.exs
fi
cp /tmp/config.exs /opt/PeerDNS/config/

# Setup dnsmasq to resolve those tlds
echo "address=/p2p/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
echo "address=/mesh/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
echo "address=/h/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
echo "address=/hype/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
echo "address=/y/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
echo "address=/ygg/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
echo "address=/tomesh/127.0.0.1#5454" | sudo tee -a /etc/dnsmasq.conf
sudo systemctl restart dnsmasq

# systemd
cp "$BASE_DIR/peerdns.service" /tmp  # Edit file in a safe space
sed -i 's/__USER__/'"$(whoami)"'/g' /tmp/peerdns.service
sudo cp /tmp/peerdns.service /etc/systemd/system
sudo systemctl daemon-reload
sudo systemctl enable peerdns.service